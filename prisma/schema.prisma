generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model announcements {
  id         String   @id @db.VarChar(255)
  faculty_fk String   @db.VarChar(255)
  title      String   @db.VarChar(255)
  content    String   @db.VarChar(1000)
  type       Int
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  faculty    faculty  @relation(fields: [faculty_fk], references: [id], onUpdate: Restrict, map: "announcements_ibfk_1")

  @@index([faculty_fk], map: "faculty_fk")
}

model grades {
  id               String         @id @db.VarChar(255)
  academic_level   Int
  class_subject_fk String         @db.VarChar(255)
  student_fk       String         @db.VarChar(255)
  school_year_fk   String         @db.VarChar(255)
  first_grading    Float          @default(0) @db.Float
  second_grading   Float          @default(0) @db.Float
  third_grading    Float          @default(0) @db.Float
  fourth_grading   Float          @default(0) @db.Float
  remarks          String         @db.VarChar(255)
  class_subjects   class_subjects @relation(fields: [class_subject_fk], references: [id], onUpdate: Restrict, map: "grades_ibfk_1")
  student          student        @relation(fields: [student_fk], references: [id], onUpdate: Restrict, map: "grades_ibfk_2")
  school_year      school_year    @relation(fields: [school_year_fk], references: [id], onUpdate: Restrict, map: "grades_ibfk_3")

  @@index([class_subject_fk], map: "class_subject_fk")
  @@index([school_year_fk], map: "school_year_fk")
  @@index([student_fk], map: "student_fk")
}

model school_year {
  id                 String               @id @db.VarChar(255)
  start              Int
  enrollment_open    Int
  status             Int
  class_sections     class_sections[]
  grades             grades[]
  student_enrollment student_enrollment[]
}

model sections {
  id             String           @id @db.VarChar(255)
  name           String           @db.VarChar(255)
  academic_level Int
  status         Int
  class_sections class_sections[]
}

model subjects {
  id             String           @id @db.VarChar(255)
  name           String           @db.VarChar(255)
  academic_level Int
  status         Int
  class_subjects class_subjects[]
}

model class_sections {
  id                 String               @id @db.VarChar(255)
  section_fk         String               @db.VarChar(255)
  school_year_fk     String               @db.VarChar(255)
  class_advisor_fk   String               @db.VarChar(255)
  status             Int
  sections           sections             @relation(fields: [section_fk], references: [id], onUpdate: Restrict, map: "class_sections_ibfk_1")
  school_year        school_year          @relation(fields: [school_year_fk], references: [id], onUpdate: Restrict, map: "class_sections_ibfk_2")
  faculty            faculty              @relation(fields: [class_advisor_fk], references: [id], onUpdate: Restrict, map: "class_sections_ibfk_3")
  class_subjects     class_subjects[]
  student_enrollment student_enrollment[]

  @@index([class_advisor_fk], map: "class_advisor_fk")
  @@index([school_year_fk], map: "school_year_fk")
  @@index([section_fk], map: "section_fk")
}

model class_subjects {
  id               String         @id @db.VarChar(255)
  subject_fk       String         @db.VarChar(255)
  teacher_fk       String         @db.VarChar(255)
  class_section_fk String         @db.VarChar(255)
  status           Int
  subjects         subjects       @relation(fields: [subject_fk], references: [id], onUpdate: Restrict, map: "class_subjects_ibfk_1")
  faculty          faculty        @relation(fields: [teacher_fk], references: [id], onUpdate: Restrict, map: "class_subjects_ibfk_2")
  class_sections   class_sections @relation(fields: [class_section_fk], references: [id], onUpdate: Restrict, map: "class_subjects_ibfk_3")
  grades           grades[]

  @@index([class_section_fk], map: "class_section_fk")
  @@index([subject_fk], map: "subject_fk")
  @@index([teacher_fk], map: "teacher_fk")
}

model faculty {
  id                 String               @id @db.VarChar(255)
  school_id          String               @unique(map: "school_id") @db.VarChar(255)
  password           String               @unique(map: "password") @db.VarChar(255)
  role               Int
  login_permission   Int
  first_name         String               @db.VarChar(255)
  middle_name        String               @db.VarChar(255)
  last_name          String               @db.VarChar(255)
  suffix             String?              @db.VarChar(5)
  gender             Int
  birthdate          DateTime             @db.Date
  age                Int
  contact_no         String               @db.VarChar(25)
  marital_status     Int
  position           String               @db.VarChar(255)
  status             Int
  announcements      announcements[]
  class_sections     class_sections[]
  class_subjects     class_subjects[]
  notifications      notifications[]
  student_enrollment student_enrollment[]
}

model notifications {
  id           String   @id @db.VarChar(255)
  faculty_fk   String?  @db.VarChar(255)
  student_fk   String?  @db.VarChar(255)
  title        String   @db.VarChar(500)
  description  String   @db.VarChar(1000)
  mark_as_read Boolean?
  faculty      faculty? @relation(fields: [faculty_fk], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notifications_ibfk_1")
  student      student? @relation(fields: [student_fk], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notifications_ibfk_2")

  @@index([faculty_fk], map: "faculty_fk")
  @@index([student_fk], map: "student_fk")
}

model parent_guardian {
  id                  String    @id @db.VarChar(255)
  mother_full_name    String?   @db.VarChar(255)
  father_full_name    String?   @db.VarChar(255)
  guardian_full_name  String    @db.VarChar(255)
  mother_contact_no   String?   @db.VarChar(255)
  father_contact_no   String?   @db.VarChar(255)
  guardian_contact_no String    @db.VarChar(255)
  status              Int
  student             student[]
}

model student {
  id                 String               @id @db.VarChar(255)
  school_id          String               @unique(map: "school_id") @db.VarChar(255)
  parentguardian_fk  String               @db.VarChar(255)
  password           String               @db.VarChar(255)
  login_permission   Int
  LRN                String?              @unique(map: "LRN") @db.VarChar(255)
  academic_level     Int
  is_enrolled        Boolean?
  last_enrolled      DateTime?            @db.Date
  first_name         String               @db.VarChar(255)
  middle_name        String               @db.VarChar(255)
  last_name          String               @db.VarChar(255)
  gender             Int
  birthdate          DateTime?            @db.Date
  age                Int
  contact_no         String               @db.VarChar(255)
  marital_status     Int
  psa_birth_cert     String?              @db.VarChar(255)
  place_of_birth     String               @db.VarChar(255)
  mother_tongue      String               @db.VarChar(255)
  indigenous         String?              @db.VarChar(255)
  ps_no              String?              @map("4ps_no") @db.VarChar(255)
  current_address    String               @db.VarChar(2000)
  permanent_address  String?              @db.VarChar(2000)
  grades             grades[]
  notifications      notifications[]
  parent_guardian    parent_guardian      @relation(fields: [parentguardian_fk], references: [id], onUpdate: Restrict, map: "student_ibfk_1")
  student_enrollment student_enrollment[]

  @@index([parentguardian_fk], map: "parentguardian_fk")
}

model student_enrollment {
  id                String         @id @db.VarChar(255)
  academic_level    Int
  class_section_fk  String         @db.VarChar(255)
  student_fk        String         @db.VarChar(255)
  enrolled_by_fk    String?        @db.VarChar(255)
  school_year_fk    String         @db.VarChar(255)
  enrollment_status Int
  class_sections    class_sections @relation(fields: [class_section_fk], references: [id], onUpdate: Restrict, map: "student_enrollment_ibfk_1")
  student           student        @relation(fields: [student_fk], references: [id], onUpdate: Restrict, map: "student_enrollment_ibfk_2")
  faculty           faculty?       @relation(fields: [enrolled_by_fk], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "student_enrollment_ibfk_3")
  school_year       school_year    @relation(fields: [school_year_fk], references: [id], onUpdate: Restrict, map: "student_enrollment_ibfk_4")

  @@index([class_section_fk], map: "class_section_fk")
  @@index([enrolled_by_fk], map: "enrolled_by_fk")
  @@index([school_year_fk], map: "school_year_fk")
  @@index([student_fk], map: "student_fk")
}
